version: "3.9"

services:
  postgres:
    container_name: ppostgres.postgres
    image: "postgres:15-alpine"
    restart: unless-stopped
    expose:
      - "5432"
    ports:
      - "127.0.0.1:${POSTGRES_PORT:-5432}:5432"
    environment:
      POSTGRES_PASSWORD: $POSTGRES_PASSWORD
      POSTGRES_USER: ${POSTGRES_USER:-$USER}
      POSTGRES_DB: ${POSTGRES_DB:-${POSTGRES_USER:-$USER}}
    networks:
      - ppostgres.postgres.network
    volumes:
      - "ppostgres.postgres.data:/var/lib/postgresql/data:rw"
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -d $${POSTGRES_DB} -U $${POSTGRES_USER}"]
      interval: 10s
      timeout: 60s
      retries: 5
      start_period: 10s
  postgres_backup:
    container_name: ppostgres.postgres_backup
    image: prodrigestivill/postgres-backup-local:15-alpine
    networks:
      - ppostgres.postgres.network
    environment:
      - POSTGRES_HOST=postgres
      - POSTGRES_DB=${POSTGRES_DB:-${POSTGRES_USER:-$USER}}
      - POSTGRES_USER=${POSTGRES_USER:-$USER}
      - POSTGRES_PASSWORD=$POSTGRES_PASSWORD
      - BACKUP_DIR=/backups
      - POSTGRES_EXTRA_OPTS=-Z6 --schema=public --blobs
      - SCHEDULE=${POSTGRES_BACKUP_SCHEDULE:-@daily}
      - HEALTHCHECK_PORT=8080
    volumes:
      - ${POSTGRES_BACKUP_DIR:-./backups}:/backups

volumes:
  ppostgres.postgres.data: {}
    
networks:
  ppostgres.postgres.network: {}
